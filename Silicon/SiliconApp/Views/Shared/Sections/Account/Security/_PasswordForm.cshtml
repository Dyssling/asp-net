@model AccountSecurityViewModel

<div id="password-form" class="password-form">
    <h3>Password</h3>
    @if (Model.UserEntity!.IsExternal)
    {
        <p class="external-user">An external user can't change their password.</p>
    }

    else
    {
        <form method="post" asp-controller="Account" asp-action="Security" asp-fragment="password-form" onsubmit="passwordSubmit()" novalidate>
            <input type="hidden" asp-for="PasswordForm.PasswordFormValue" />
            <label asp-for="PasswordForm.CurrentPassword"></label>
            <input asp-for="PasswordForm.CurrentPassword" class="text-input" />
            <span asp-validation-for="PasswordForm.CurrentPassword"></span>
            <div class="double-input-container">
                <div>
                    <label asp-for="PasswordForm.NewPassword"></label>
                    <input asp-for="PasswordForm.NewPassword" class="text-input" />
                    <span asp-validation-for="PasswordForm.NewPassword"></span>
                </div>
                <div>
                    <label asp-for="PasswordForm.ConfirmNewPassword"></label>
                    <input asp-for="PasswordForm.ConfirmNewPassword" class="text-input" />
                    <span asp-validation-for="PasswordForm.ConfirmNewPassword"></span>
                </div>
            </div>
            <p class="error-message">
                @ViewData["PasswordErrorMessage"]
            </p>
            <p class="success-message">
                @ViewData["PasswordSuccessMessage"]
            </p>
            <div class="btn-container">
                <a class="btn light" asp-controller="Account" asp-action="Security">Cancel</a>
                <button type="submit" class="btn">Change password</button>
            </div>
        </form>
    }
</div>